# Tests for marshmallow_dataclass.mypy, using pytest-mypy-plugins
# NOTE: Since pytest-mypy-plugins is not installed on pypy (see setup.py), these tests
#       will not even be collected by pytest
- case: NewType_basic
  mypy_config: |
    follow_imports = silent
    plugins = marshmallow_dataclass.mypy
  main: |
    from dataclasses import dataclass
    import marshmallow as ma
    from marshmallow_dataclass import NewType

    Email = NewType("Email", str, validate=ma.validate.Email)
    UserID = NewType("UserID", validate=ma.validate.Length(equal=32), typ=str)

    @dataclass
    class User:
        id: UserID
        email: Email

    user = User(id="a"*32, email="user@email.com")
    reveal_type(user.id)  # N: Revealed type is "builtins.str"
    reveal_type(user.email)  # N: Revealed type is "builtins.str"

    User(id=42, email="user@email.com")  # E: Argument "id" to "User" has incompatible type "int"; expected "str"
    User(id="a"*32, email=["not", "a", "string"])  # E: Argument "email" to "User" has incompatible type "List[str]"; expected "str"
- case: marshmallow_dataclass_keyword_arguments
  mypy_config: |
    follow_imports = silent
    plugins = marshmallow_dataclass.mypy
  main: |
    from marshmallow_dataclass import dataclass

    @dataclass(order=True)
    class User:
        id: int
        name: str

    user = User(id=4, name='Johny')
- case: public_custom_types
  mypy_config: |
    follow_imports = silent
    plugins = marshmallow_dataclass.mypy
  main: |
    from dataclasses import dataclass
    import marshmallow
    from marshmallow_dataclass.typing import Email, Url


    @dataclass
    class Website:
        url: Url
        email: Email

    website = Website(url="http://www.example.org", email="admin@example.org")
    reveal_type(website.url)  # N: Revealed type is "builtins.str"
    reveal_type(website.email)  # N: Revealed type is "builtins.str"

    Website(url=42, email="user@email.com")  # E: Argument "url" to "Website" has incompatible type "int"; expected "str"
